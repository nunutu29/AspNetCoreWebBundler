<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="..\common.props" />

  <PropertyGroup>    
    <TargetFramework>netstandard2.0</TargetFramework>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <!-- forces SDK to copy dependencies into build output to make packing easier -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Framework" Version="16.*" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="16.*" PrivateAssets="All" />

    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="8.0.1" />
    <PackageReference Include="Microsoft.Extensions.Hosting.Abstractions" Version="8.0.0" />

    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="NUglify" Version="1.21.9" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="Build\AspNetCoreWebBundler.props">
      <Pack>true</Pack>
      <PackagePath>build</PackagePath>
    </Content>
    <Content Include="Build\AspNetCoreWebBundler.targets">
      <Pack>true</Pack>
      <PackagePath>build</PackagePath>
    </Content>
  </ItemGroup>


  <!--
    The include needs to happen after output has been copied to build output folder
    but before NuGet generates a nuspec. See https://github.com/NuGet/Home/issues/4704.
    -->
  <Target Name="PackTaskDependencies" BeforeTargets="GenerateNuspec">
    <ItemGroup>
      <_PackageFiles Include="bin\$(Configuration)\*\$(PackageId).dll;bin\$(Configuration)\*\Newtonsoft.Json.dll;bin\$(Configuration)\*\NUglify.dll">
        <PackagePath>tools\%(RecursiveDir)</PackagePath>
        <Visible>false</Visible>
        <BuildAction>Content</BuildAction>
      </_PackageFiles>
    </ItemGroup>
  </Target>

</Project>
